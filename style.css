body{
    margin: 0px; /* To not leave any space between the screen corner & the content. margin is a space inside the component*/
    padding-top: 800px; /* To leave the space of 800 px from the top of the screen. Padding  is the space outside the component*/
}
.profile{
    width: 175px; /* to make the image look smaller */
    margin-bottom: 50px; /* To leave 50px space between the bottom of the image & the text below it */
    border-radius: 50%; /* To make the image circular */
    border-style: solid;
    border-width: 5px;
    border-color: firebrick;
}
#welcome{
    background: linear-gradient(#f5f59f 0%, #53f507 100%);/*background color is a range of linear gradients. That means a color range from somecolor at 0% section area to 100% section area */
    height: 700px;
    width: 100%;
    display: table;/* We want the div with id name ‘parallel-inner’ to overlay right on the Welcome section. So for that we have set the display of the Welcome section as a table and set the display of the parallel-inner division as table cell so that div elements appear on the section. */
    position: absolute;/* ???? */
    overflow: hidden;/* ???? */
    Left: 0;/* margin */
    Top: 0;/* margin */
    Bottom: 0;/* margin */
    Right: 0;/* margin */
    z-index: 0;
    text-align: center;
    vertical-align: middle;
    padding-top: 100px;
}
h1{
    font-size: 40px;
    line-height: 1.2;
    font-family: monospace;
    font-weight: 100;
}
#name{
    font-size: 40px;
    line-height: 1.2;
    font-family: 'Cinzel Decorative';
}
h2{
    font-size: 30px;
    font-weight: 300;
    line-height: 1.2;
    font-family: monospace
}
#bio{
    padding: 50px;
    text-align: center;
    font-size: 20px;
    background-color:beige;
}
.line{
    height: 6px;
    width: 100px;
    background-color: #000;
    margin: auto; /* Aligns itself horizontally */
}
p{
    max-width: 450px;
    margin: 25px auto;
    font-size: 20px;
    line-height: 1.2;
}
.menu{
    list-style: none;/* To avoid bullets */
    font-family: sans-serif;
    position: absolute; /* If position is fixed, it means the position will remain fixed with respect to the browser window. This means, on scrolling the menu scrolls with the browser. If you set it to absolute, then the menu stays with the parent element. So, since the ul tag is inside the body tag so the body tag is the parent of the ul tag. Hence the ul tag will stick to the body tag.*/
    top: 10px; /* margin from the top of the browser window */
    right: 30px; /* to align the ul from the right side of the page or browser window. */
    z-index: 1; /* refers to overlapping or overlaying of html elements. Now, because we want this menu to be displayed over the section welcome and scroll over it, we have set the z-index of menu to 10 and that of section welcome to 9. The higher z-index element is overlapped or displayed on the top of the lower z-index element. We can write any number in z index */
    cursor: pointer; /* Cursor needs to appear clickable like the hand with the pointing finger */
    }
.links{
    padding: 10px; /* To provide internal spacing between the menu items*/
    font-family: fantasy;
    font-size: 20px;
    color: black;
    float:left; /* To order the items from left */
    }
.links:hover{ /* You can set events in css just like in javascript. But in css, only the                     design effect will take place. However, in javascript events, you can run a                 code or function */
    background-color: chartreuse;
}